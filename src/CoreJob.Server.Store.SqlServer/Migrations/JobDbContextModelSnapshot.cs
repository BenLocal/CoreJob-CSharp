// <auto-generated />
using System;
using CoreJob.Server.Framework.Store;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreJob.Server.Store.SqlServer.Migrations
{
    [DbContext(typeof(JobDbContext))]
    partial class JobDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CoreJob.Framework.Models.JobInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("create_user");

                    b.Property<string>("Cron")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cron");

                    b.Property<string>("ExecutorHandler")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("executor_handler");

                    b.Property<int>("ExecutorId")
                        .HasColumnType("int")
                        .HasColumnName("executor_id");

                    b.Property<string>("ExecutorParam")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("executor_param");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("in_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("Name");

                    b.ToTable("job_info");
                });

            modelBuilder.Entity("CoreJob.Server.Framework.Store.DashboardUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<bool>("Disabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_disabled");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_name");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("password");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("in_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("Name");

                    b.ToTable("dashboard_user");
                });

            modelBuilder.Entity("CoreJob.Server.Framework.Store.JobExecuter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<bool>("Auto")
                        .HasColumnType("bit")
                        .HasColumnName("auto");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("in_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("RegistryHosts")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("registry_hosts");

                    b.Property<string>("RegistryKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("registry_key");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("Name");

                    b.HasIndex("RegistryKey");

                    b.ToTable("job_executer");
                });

            modelBuilder.Entity("CoreJob.Server.Framework.Store.JobLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("CompleteCode")
                        .HasColumnType("int")
                        .HasColumnName("complete_code");

                    b.Property<string>("CompleteMsg")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("complete_msg");

                    b.Property<DateTime?>("CompleteTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("complete_time");

                    b.Property<string>("ExecuterHandler")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("executer_handler");

                    b.Property<string>("ExecuterHost")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("executer_host");

                    b.Property<int>("ExecuterId")
                        .HasColumnType("int")
                        .HasColumnName("executer_id");

                    b.Property<string>("ExecuterParam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("executer_param");

                    b.Property<int>("HandlerCode")
                        .HasColumnType("int")
                        .HasColumnName("handler_code");

                    b.Property<string>("HandlerMsg")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("handler_msg");

                    b.Property<DateTime?>("HandlerTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("handler_time");

                    b.Property<int>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("job_id");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_time");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("ExecuterId");

                    b.HasIndex("JobId");

                    b.ToTable("job_log");
                });

            modelBuilder.Entity("CoreJob.Server.Framework.Store.RegistryInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("host");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("in_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("Host");

                    b.HasIndex("Name");

                    b.ToTable("registry_info");
                });
#pragma warning restore 612, 618
        }
    }
}
